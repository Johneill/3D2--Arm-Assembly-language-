


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000         
    5 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    6 00000000 E0008000 
                       T1      equ              0xE0008000
    7 00000000         
    8 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
    9 00000000 00000004 
                       TCR     equ              4
   10 00000000 00000014 
                       MCR     equ              0x14
   11 00000000 00000018 
                       MR0     equ              0x18
   12 00000000         
   13 00000000 00000002 
                       TimerCommandReset
                               equ              2
   14 00000000 00000001 
                       TimerCommandRun
                               equ              1
   15 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   16 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   17 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   18 00000000         
   19 00000000         ; VIC Stuff -- UM, Table 41
   20 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   21 00000000 00000010 
                       IntEnable
                               equ              0x10
   22 00000000 00000030 
                       VectAddr
                               equ              0x30
   23 00000000 00000100 
                       VectAddr0
                               equ              0x100
   24 00000000 00000200 
                       VectCtrl0
                               equ              0x200
   25 00000000         
   26 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   27 00000000 00000010 



ARM Macro Assembler    Page 2 


                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   28 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   29 00000000         
   30 00000000 E0028000 
                       IO0PIN  equ              0xE0028000
   31 00000000 E0028004 
                       IO0SET  equ              0xE0028004
   32 00000000 E0028008 
                       IO0DIR  equ              0xE0028008
   33 00000000 E002800C 
                       IO0CLR  EQU              0xE002800C
   34 00000000         
   35 00000000 00040000 
                       blue    EQU              0X00040000  ;position 18
   36 00000000 00200000 
                       green   EQU              0X00200000  ;position 21
   37 00000000 00020000 
                       red     EQU              0X00020000  ;position 17
   38 00000000         
   39 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   40 00000000                 IMPORT           main
   41 00000000         
   42 00000000         ; (c) Mike Brady, 2014 -- 2019.
   43 00000000         
   44 00000000                 EXPORT           start
   45 00000000         start
   46 00000000         ; initialisation code
   47 00000000         
   48 00000000         ; Initialise the VIC
   49 00000000 E59F00F8        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   50 00000004         
   51 00000004 E59F10F8        ldr              r1,=irqhan
   52 00000008 E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   53 0000000C         
   54 0000000C E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   55 00000010 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   56 00000014         
   57 00000014 E3A01010        mov              r1,#Timer0Mask
   58 00000018 E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   59 0000001C         
   60 0000001C E3A01000        mov              r1,#0
   61 00000020 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (



ARM Macro Assembler    Page 3 


                                                            may not be needed)
   62 00000024         
   63 00000024         ; Initialise Timer 0
   64 00000024 E59F00DC        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   65 00000028         
   66 00000028 E3A01002        mov              r1,#TimerCommandReset
   67 0000002C E5801004        str              r1,[r0,#TCR]
   68 00000030         
   69 00000030 E3A010FF        mov              r1,#TimerResetAllInterrupts
   70 00000034 E5801000        str              r1,[r0,#IR]
   71 00000038         
   72 00000038 E59F10CC        ldr              r1,=(14745600/200)-1 ; 5 ms = 1
                                                            /200 second
   73 0000003C E5801018        str              r1,[r0,#MR0]
   74 00000040         
   75 00000040 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   76 00000044 E5801014        str              r1,[r0,#MCR]
   77 00000048         
   78 00000048 E3A01001        mov              r1,#TimerCommandRun
   79 0000004C E5801004        str              r1,[r0,#TCR]
   80 00000050         
   81 00000050         ;from here, initialisation is finished, so it should be 
                       the main body of the main program
   82 00000050 E59FA0B8        ldr              R10,=IO0PIN
   83 00000054 E59A2000        ldr              R2,[R10]
   84 00000058 E59F60B4        ldr              R6,=IO0DIR  ;SELECTING PINS FOR
                                                             OUTPUT
   85 0000005C E3A05826        ldr              R5,=0x260000 ; PIN 17,18 & 21
   86 00000060 E5865000        str              R5,[R6]
   87 00000064 E59F60AC        ldr              R6,=IO0SET  ;TURNING ALL PINS O
                                                            FF
   88 00000068 E5865000        str              R5,[R6]
   89 0000006C E59F50A8        ldr              R5,=IO0CLR  ;TURNING SELECTED P
                                                            INS ON
   90 00000070 E3A04826        ldr              R4,=0x260000
   91 00000074         
   92 00000074 E59F30A4        ldr              r3, =tick
   93 00000078 E593C000        ldr              r12, [r3]
   94 0000007C E28CC0C8        ADD              r12,r12,#200
   95 00000080         
   96 00000080         loop2
   97 00000080 E5939000        ldr              r9, [r3]
   98 00000084 E159000C        CMP              r9,r12
   99 00000088 2A000000        BCS              endloop2    ;Unsigned >=
  100 0000008C EAFFFFFB        B                loop2
  101 00000090         
  102 00000090         endloop2
  103 00000090 E28CC0C8        ADD              r12,r12,#200
  104 00000094         
  105 00000094 E59F7088        ldr              r7, =turn_on
  106 00000098 E5978000        ldr              r8, [r7]
  107 0000009C         
  108 0000009C E3580006        CMP              r8,#6       ;;compare value in 
                                                            r8 and 6 if the sam
                                                            e enter the loop
  109 000000A0 1A000005        BNE              skip1
  110 000000A4 E3A08002        MOV              r8, #2
  111 000000A8 E5878000        str              r8, [r7]



ARM Macro Assembler    Page 4 


  112 000000AC E3A02701        ldr              R2,=blue    ;;this section will
                                                             turn in ther blue 
                                                            light
  113 000000B0 E5864000        str              R4,[R6]
  114 000000B4 E5852000        str              R2,[R5]
  115 000000B8 EA00000E        b                skip3
  116 000000BC         skip1
  117 000000BC E3580004        CMP              R8,#4       ;compare value in r
                                                            8 and 4 if the same
                                                             enter the loop
  118 000000C0 1A000005        BNE              skip2
  119 000000C4 E3A08006        MOV              r8, #6
  120 000000C8 E5878000        str              r8, [r7]
  121 000000CC E3A02602        ldr              R2,=green   ;this section will 
                                                            turn in ther green 
                                                            light
  122 000000D0 E5864000        str              R4,[R6]
  123 000000D4 E5852000        str              R2,[R5]
  124 000000D8 EA000006        b                skip3
  125 000000DC         skip2
  126 000000DC E3580002        CMP              R8,#2       ;compare value in r
                                                            8 and 2 if the same
                                                             enter the loop
  127 000000E0 1A000004        BNE              skip3
  128 000000E4 E3A08004        MOV              r8, #4
  129 000000E8 E5878000        str              r8, [r7]
  130 000000EC E3A02802        ldr              R2,=red     ; this section will
                                                             turn in ther red l
                                                            ight
  131 000000F0 E5864000        str              R4,[R6]
  132 000000F4 E5852000        str              R2,[R5]
  133 000000F8         skip3
  134 000000F8 EAFFFFE0        B                loop2
  135 000000FC         
  136 000000FC EAFFFFFE 
                       wloop   b                wloop       ; branch always
  137 00000100         ;main program execution will never drop below the statem
                       ent above.
  138 00000100         
  139 00000100 FFFFF000 
              00000000 
              E0004000 
              00011FFF 
              E0028000 
              E0028008 
              E0028004 
              E002800C 
              00000000 
              00000000         AREA             InterruptStuff, CODE, READONLY
  140 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4
  141 00000004 E92D4823        stmfd            sp!,{r0-r1, r5, r11, lr} ; the 
                                                            lr will be restored
                                                             to the pc aka savi
                                                            ng where it came fr
                                                            om!!!
  142 00000008         
  143 00000008         ;this is the body of the interrupt handler
  144 00000008         



ARM Macro Assembler    Page 5 


  145 00000008         ;here you'd put the unique part of your interrupt handle
                       r
  146 00000008         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
  147 00000008 E59F5024        ldr              r5, =tick   ;load tick
  148 0000000C E595B000        ldr              r11, [r5]
  149 00000010 E28BB001        add              r11, r11, #1 ; add one to tick
  150 00000014 E585B000        str              r11, [r5]   ; store tick back i
                                                            n memory
  151 00000018         
  152 00000018         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  153 00000018         ;i.e. we 'acknowledge' the interrupt
  154 00000018 E59F0018        ldr              r0,=T0
  155 0000001C E3A01001        mov              r1,#TimerResetTimer0Interrupt
  156 00000020 E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  157 00000024         
  158 00000024         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  159 00000024 E59F0010        ldr              r0,=VIC
  160 00000028 E3A01000        mov              r1,#0
  161 0000002C E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  162 00000030         
  163 00000030 E8FD8823        ldmfd            sp!,{r0-r1, r5, r11, pc}^ ; ret
                                                            urn from interrupt,
                                                             restoring pc from 
                                                            lr
  164 00000034         ; and also restoring the CPSR and going back to same pla
                       ce where it came from
  165 00000034         
  166 00000034 00000000 
              E0004000 
              FFFFF000         AREA             memory, DATA, READWRITE
  167 00000000 00000000 
                       tick    DCD              0
  168 00000004 00000002 
                       turn_on DCD              2
  169 00000008                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 39 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
endloop2 00000090

Symbol: endloop2
   Definitions
      At line 102 in file App.s
   Uses
      At line 99 in file App.s
Comment: endloop2 used once
loop2 00000080

Symbol: loop2
   Definitions
      At line 96 in file App.s
   Uses
      At line 100 in file App.s
      At line 134 in file App.s

skip1 000000BC

Symbol: skip1
   Definitions
      At line 116 in file App.s
   Uses
      At line 109 in file App.s
Comment: skip1 used once
skip2 000000DC

Symbol: skip2
   Definitions
      At line 125 in file App.s
   Uses
      At line 118 in file App.s
Comment: skip2 used once
skip3 000000F8

Symbol: skip3
   Definitions
      At line 133 in file App.s
   Uses
      At line 115 in file App.s
      At line 124 in file App.s
      At line 127 in file App.s

start 00000000

Symbol: start
   Definitions
      At line 45 in file App.s
   Uses
      At line 44 in file App.s
Comment: start used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

wloop 000000FC

Symbol: wloop
   Definitions
      At line 136 in file App.s
   Uses
      At line 136 in file App.s
Comment: wloop used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 139 in file App.s
   Uses
      None
Comment: InterruptStuff unused
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 140 in file App.s
   Uses
      At line 51 in file App.s
Comment: irqhan used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

memory 00000000

Symbol: memory
   Definitions
      At line 166 in file App.s
   Uses
      None
Comment: memory unused
tick 00000000

Symbol: tick
   Definitions
      At line 167 in file App.s
   Uses
      At line 92 in file App.s
      At line 147 in file App.s

turn_on 00000004

Symbol: turn_on
   Definitions
      At line 168 in file App.s
   Uses
      At line 105 in file App.s
Comment: turn_on used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 33 in file App.s
   Uses
      At line 89 in file App.s
Comment: IO0CLR used once
IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 32 in file App.s
   Uses
      At line 84 in file App.s
Comment: IO0DIR used once
IO0PIN E0028000

Symbol: IO0PIN
   Definitions
      At line 30 in file App.s
   Uses
      At line 82 in file App.s
Comment: IO0PIN used once
IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 31 in file App.s
   Uses
      At line 87 in file App.s
Comment: IO0SET used once
IR 00000000

Symbol: IR
   Definitions
      At line 8 in file App.s
   Uses
      At line 70 in file App.s
      At line 156 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 28 in file App.s
   Uses
      At line 54 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 21 in file App.s
   Uses
      At line 58 in file App.s
Comment: IntEnable used once
MCR 00000014




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: MCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 76 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 11 in file App.s
   Uses
      At line 73 in file App.s
Comment: MR0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 5 in file App.s
   Uses
      At line 64 in file App.s
      At line 154 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 6 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 9 in file App.s
   Uses
      At line 67 in file App.s
      At line 79 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 26 in file App.s
   Uses
      At line 27 in file App.s
      At line 54 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 27 in file App.s
   Uses
      At line 57 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: TimerCommandReset
   Definitions
      At line 13 in file App.s
   Uses
      At line 66 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 14 in file App.s
   Uses
      At line 78 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 15 in file App.s
   Uses
      At line 75 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 17 in file App.s
   Uses
      At line 69 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 16 in file App.s
   Uses
      At line 155 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 20 in file App.s
   Uses
      At line 49 in file App.s
      At line 159 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 22 in file App.s
   Uses
      At line 61 in file App.s
      At line 161 in file App.s

VectAddr0 00000100

Symbol: VectAddr0



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 23 in file App.s
   Uses
      At line 52 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 24 in file App.s
   Uses
      At line 55 in file App.s
Comment: VectCtrl0 used once
blue 00040000

Symbol: blue
   Definitions
      At line 35 in file App.s
   Uses
      At line 112 in file App.s
Comment: blue used once
green 00200000

Symbol: green
   Definitions
      At line 36 in file App.s
   Uses
      At line 121 in file App.s
Comment: green used once
red 00020000

Symbol: red
   Definitions
      At line 37 in file App.s
   Uses
      At line 130 in file App.s
Comment: red used once
26 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 40 in file App.s
   Uses
      None
Comment: main unused
1 symbol
377 symbols in table




ARM Macro Assembler    Page 1 


    1 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         start
    5 00000000         
    6 00000000         ;Setup GPIO
    7 00000000 E0028018 
                       IO1DIR  equ              0xE0028018
    8 00000000 E0028014 
                       IO1SET  equ              0xE0028014
    9 00000000 E002801C 
                       IO1CLR  equ              0xE002801C
   10 00000000 E0028010 
                       IO1PIN  equ              0xE0028010
   11 00000000         
   12 00000000 E59F1168        ldr              r1, =IO1DIR
   13 00000004 E3A0280F        ldr              r2,=0x000f0000 ;select P1.19--P
                                                            1.16
   14 00000008 E5812000        str              r2,[r1]     ;make them outputs
   15 0000000C E59F1160        ldr              r1,=IO1SET
   16 00000010 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
   17 00000014 E59F215C        ldr              r2,=IO1CLR
   18 00000018         
   19 00000018         ; Setup User Mode
   20 00000018 00000010 
                       Mode_USR
                               equ              0x10
   21 00000018         
   22 00000018         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
   23 00000018         ; Timer Stuff -- UM, Table 173
   24 00000018 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
   25 00000018 E0008000 
                       T1      equ              0xE0008000
   26 00000018 00000000 
                       IR      equ              0
   27 00000018 00000004 
                       TCR     equ              4
   28 00000018 00000014 
                       MCR     equ              0x14
   29 00000018 00000018 
                       MR0     equ              0x18
   30 00000018         
   31 00000018 00000002 
                       TimerCommandReset
                               equ              2
   32 00000018 00000001 
                       TimerCommandRun
                               equ              1
   33 00000018 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   34 00000018 00000001 
                       TimerResetTimer0Interrupt
                               equ              1



ARM Macro Assembler    Page 2 


   35 00000018 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   36 00000018         
   37 00000018         ; VIC Stuff -- UM, Table 41
   38 00000018 FFFFF000 
                       VIC     equ              0xFFFFF000
   39 00000018 00000010 
                       IntEnable
                               equ              0x10
   40 00000018 00000030 
                       VectAddr
                               equ              0x30
   41 00000018 00000100 
                       VectAddr0
                               equ              0x100
   42 00000018 00000200 
                       VectCtrl0
                               equ              0x200
   43 00000018         
   44 00000018 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   45 00000018 00000010 
                       Timer0Mask
                               equ              1 <<Timer0ChannelNumber 
                                                            ; UM, Table 63
   46 00000018 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   47 00000018         
   48 00000018         ; Initialisation code
   49 00000018         ; Initialise the VIC
   50 00000018 E59F015C        ldr              r0, =VIC    ; looking at you, V
                                                            IC!
   51 0000001C         
   52 0000001C E59F115C        ldr              r1, =irqhan
   53 00000020 E5801100        str              r1, [r0, #VectAddr0] ; associat
                                                            e our interrupt han
                                                            dler with Vectored 
                                                            Interrupt 0
   54 00000024         
   55 00000024 E3A01024        mov              r1, #Timer0ChannelNumber+(1<<IR
Qslot_en)
   56 00000028 E5801200        str              r1, [r0, #VectCtrl0] ; make Tim
                                                            er 0 interrupts the
                                                             source of Vectored
                                                             Interrupt 0
   57 0000002C         
   58 0000002C E3A01010        mov              r1, #Timer0Mask
   59 00000030 E5801010        str              r1, [r0, #IntEnable] ; enable T
                                                            imer 0 interrupts t
                                                            o be recognised by 
                                                            the VIC
   60 00000034         
   61 00000034 E3A01000        mov              r1, #0
   62 00000038 E5801030        str              r1, [r0, #VectAddr] ; remove an
                                                            y pending interrupt
                                                             (may not be needed



ARM Macro Assembler    Page 3 


                                                            )
   63 0000003C         
   64 0000003C         ; Initialise Timer 0
   65 0000003C E59F0140        ldr              r0, =T0     ; looking at you, T
                                                            imer 0!
   66 00000040         
   67 00000040 E3A01002        mov              r1, #TimerCommandReset
   68 00000044 E5801004        str              r1, [r0, #TCR]
   69 00000048         
   70 00000048 E3A010FF        mov              r1, #TimerResetAllInterrupts
   71 0000004C E5801000        str              r1, [r0, #IR]
   72 00000050         
   73 00000050 E59F1130        ldr              r1, =(14745600/200) - 1 ; 5 ms 
                                                            = 1/200 second
   74 00000054 E5801018        str              r1, [r0, #MR0]
   75 00000058         
   76 00000058 E3A01003        mov              r1, #TimerModeResetAndInterrupt
   77 0000005C E5801014        str              r1, [r0, #MCR]
   78 00000060         
   79 00000060 E3A01001        mov              r1, #TimerCommandRun
   80 00000064 E5801004        str              r1, [r0, #TCR]
   81 00000068         
   82 00000068         ; Setup Stack for each CurrentlyRunning
   83 00000068 E3A00000        ldr              r0, =0
   84 0000006C E3A01000        ldr              r1, =0
   85 00000070 E3A02000        ldr              r2, =0
   86 00000074 E3A03000        ldr              r3, =0
   87 00000078 E3A04000        ldr              r4, =0
   88 0000007C E3A05000        ldr              r5, =0
   89 00000080 E3A06000        ldr              r6, =0
   90 00000084 E3A07000        ldr              r7, =0
   91 00000088 E3A08000        ldr              r8, =0
   92 0000008C E59F90F8        ldr              r9, =ColorsTop
   93 00000090         
   94 00000090 E59FA0F8        ldr              r10, =ColorsStack
   95 00000094 E59AB000        ldr              r11, [r10]
   96 00000098 E92B03FF        stmfd            r11!, {r0-r8, r9}
   97 0000009C E58AB000        str              r11, [r10]
   98 000000A0         
   99 000000A0 E59F90EC        ldr              r9, =SequenceTop
  100 000000A4         
  101 000000A4 E59FA0EC        ldr              r10, =SequenceStack
  102 000000A8 E59AB000        ldr              r11, [r10]
  103 000000AC E92B03FF        stmfd            r11!, {r0-r8, r9}
  104 000000B0 E58AB000        str              r11, [r10]
  105 000000B4         
  106 000000B4 E321F010        msr              cpsr_c, #Mode_USR
  107 000000B8 EAFFFFFE 
                       loop    b                loop
  108 000000BC         
  109 000000BC         
  110 000000BC         
  111 000000BC         ColorsTop
  112 000000BC         ;GPIO Setup
  113 000000BC E0028008 
                       IO0DIR  equ              0xE0028008
  114 000000BC E0028004 
                       IO0SET  equ              0xE0028004
  115 000000BC E002800C 



ARM Macro Assembler    Page 4 


                       IO0CLR  equ              0xE002800C
  116 000000BC         
  117 000000BC E59F00D8        ldr              r0, =IO0DIR
  118 000000C0 E3A01826        ldr              r1, =0x00260000 ; Select P0.17,
                                                             P0.18, P0.21
  119 000000C4 E5801000        str              r1, [r0]    ; Make them outputs
                                                            
  120 000000C8 E59F00D0        ldr              r0, =IO0SET
  121 000000CC E5801000        str              r1, [r0]    ; Set them to turn 
                                                            the LEDs off
  122 000000D0 E59F10CC        ldr              r1, =IO0CLR
  123 000000D4         
  124 000000D4         ; From here, initialisation is finished, so it should be
                        the main body of the main program
  125 000000D4 E59F50CC        ldr              r5, =timer
  126 000000D8 E5957000        ldr              r7, [r5]
  127 000000DC E28770C8        add              r7, r7, #(1000/5)
  128 000000E0 E59F20C4 
                       wh1     ldr              r2, =leds
  129 000000E4 E3A04008        mov              r4, #8
  130 000000E8 E4923004        ldr              r3, [r2], #4
  131 000000EC E5813000        str              r3, [r1]
  132 000000F0 E59F50B0 
                       dowh1   ldr              r5, =timer
  133 000000F4 E5956000        ldr              r6, [r5]
  134 000000F8 E1560007        cmp              r6, r7
  135 000000FC 3A000006        bcc              endif4
  136 00000100 E1A07006        mov              r7, r6
  137 00000104 E28770C8        add              r7, r7, #(1000/5)
  138 00000108 E5856000        str              r6, [r5]
  139 0000010C E2444001        sub              r4, r4, #1
  140 00000110 E5803000        str              r3, [r0]
  141 00000114 E4923004        ldr              r3, [r2], #4
  142 00000118 E5813000        str              r3, [r1]
  143 0000011C E3540000 
                       endif4  cmp              r4, #0
  144 00000120 1AFFFFF2        bne              dowh1
  145 00000124 EAFFFFED        b                wh1
  146 00000128         ; Main program execution will never drop below the state
                       ment above.
  147 00000128         
  148 00000128         
  149 00000128         
  150 00000128         SequenceTop
  151 00000128         ;Setup GPIO
  152 00000128 E59F1040        ldr              r1,=IO1DIR
  153 0000012C E3A0280F        ldr              r2,=0x000f0000 ;select P1.19--P
                                                            1.16
  154 00000130 E5812000        str              r2,[r1]     ;make them outputs
  155 00000134 E59F1038        ldr              r1,=IO1SET
  156 00000138 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
  157 0000013C E59F2034        ldr              r2,=IO1CLR
  158 00000140         ; r1 points to the SET register
  159 00000140         ; r2 points to the CLEAR register
  160 00000140         
  161 00000140 E3A05601        ldr              r5,=0x00100000 ; end when the m
                                                            ask reaches this va
                                                            lue



ARM Macro Assembler    Page 5 


  162 00000144 E3A03801 
                       wloop   ldr              r3,=0x00010000 
                                                            ; start with P1.16.
                                                            
  163 00000148 E5823000 
                       floop   str              r3,[r2]     ; clear the bit -> 
                                                            turn on the LED
  164 0000014C         
  165 0000014C         ;delay for about a half second
  166 0000014C E59F4060        ldr              r4,=1000000 ;this is the value 
                                                            that needs changed,
                                                             cant see flash at 
                                                            5000
  167 00000150 E2544001 
                       dloop   subs             r4,r4,#1
  168 00000154 1AFFFFFD        bne              dloop
  169 00000158         
  170 00000158 E5813000        str              r3,[r1]     ;set the bit -> tur
                                                            n off the LED
  171 0000015C E1A03083        mov              r3,r3,lsl #1 ;shift up to next 
                                                            bit. P1.16 -> P1.17
                                                             etc.
  172 00000160 E1530005        cmp              r3,r5
  173 00000164 1AFFFFF7        bne              floop
  174 00000168 EAFFFFF5        b                wloop
  175 0000016C EAFFFFFE 
                       stop    B                stop
  176 00000170         
  177 00000170         
  178 00000170         
  179 00000170 E0028018 
              E0028014 
              E002801C 
              FFFFF000 
              00000000 
              E0004000 
              00011FFF 
              00000000 
              00000000 
              00000000 
              00000000 
              E0028008 
              E0028004 
              E002800C 
              00000000 
              00000000 
              00000000 
              000F4240         AREA             InterruptStuff, CODE, READONLY
  180 00000000 E24EE004 
                       irqhan  sub              lr, lr, #4
  181 00000004         ; this is the body of the interrupt handler
  182 00000004         
  183 00000004         ; here you'd put the unique part of your interrupt handl
                       er
  184 00000004         ; all the other stuff is "housekeeping" to save register
                       s and acknowledge interrupts
  185 00000004         
  186 00000004         ; Increment Timer for LED CurrentlyRunning
  187 00000004 E59F90C4        ldr              r9, =timer



ARM Macro Assembler    Page 6 


  188 00000008 E599A000        ldr              r10, [r9]
  189 0000000C E28AA001        add              r10, r10, #1
  190 00000010 E589A000        str              r10, [r9]
  191 00000014 E35A0001        cmp              r10, #1
  192 00000018 0A00001C        beq              else00
  193 0000001C         
  194 0000001C         ; Swap CurrentlyRunning and Load in Registers and Addres
                       s of Other CurrentlyRunning
  195 0000001C E59F90B0        ldr              r9, =CurrentlyRunning
  196 00000020 E599A000        ldr              r10, [r9]
  197 00000024 E35A0000        cmp              r10, #0
  198 00000028 1A00000B        bne              else11
  199 0000002C E59FB0A4        ldr              r11, =ColorsStack
  200 00000030 E59BC000        ldr              r12, [r11]
  201 00000034 E92C41FF        stmfd            r12!, {r0-r8, lr}
  202 00000038 E58BC000        str              r12, [r11]
  203 0000003C E59FB098        ldr              r11, =SequenceStack
  204 00000040 E59BC000        ldr              r12, [r11]
  205 00000044 E8BC41FF        ldmfd            r12!, {r0-r8, lr}
  206 00000048 E58BC000        str              r12, [r11]
  207 0000004C E59BD000        ldr              sp, [r11]
  208 00000050 E92D4000        stmfd            sp!, {lr}   ; the lr will be re
                                                            stored to the pc
  209 00000054 E3A0A001        ldr              r10, =1
  210 00000058 EA00000A        b                endif11
  211 0000005C E59FB078 
                       else11  ldr              r11, =SequenceStack
  212 00000060 E59BC000        ldr              r12, [r11]
  213 00000064 E92C41FF        stmfd            r12!, {r0-r8, lr}
  214 00000068 E58BC000        str              r12, [r11]
  215 0000006C E59FB064        ldr              r11, =ColorsStack
  216 00000070 E59BC000        ldr              r12, [r11]
  217 00000074 E8BC41FF        ldmfd            r12!, {r0-r8, lr}
  218 00000078 E58BC000        str              r12, [r11]
  219 0000007C E59BD000        ldr              sp, [r11]
  220 00000080 E92D4000        stmfd            sp!, {lr}   ; the lr will be re
                                                            stored to the pc   
                                                            
  221 00000084 E3A0A000        ldr              r10, =0
  222 00000088 E589A000 
                       endif11 str              r10, [r9]
  223 0000008C EA000008        b                endif00
  224 00000090 E59F903C 
                       else00  ldr              r9, =CurrentlyRunning
  225 00000094 E3A0A001        ldr              r10, =1
  226 00000098 E589A000        str              r10, [r9]
  227 0000009C E59FB038        ldr              r11, =SequenceStack
  228 000000A0 E59BC000        ldr              r12, [r11]
  229 000000A4 E8BC41FF        ldmfd            r12!, {r0-r8, lr}
  230 000000A8 E58BC000        str              r12, [r11]
  231 000000AC E59BD000        ldr              sp, [r11]
  232 000000B0 E92D4000        stmfd            sp!, {lr}   ; the lr will be re
                                                            stored to the pc 
  233 000000B4         endif00
  234 000000B4         
  235 000000B4         ; this is where we stop the timer from making the interr
                       upt request to the VIC
  236 000000B4         ; i.e. we 'acknowledge' the interrupt
  237 000000B4         



ARM Macro Assembler    Page 7 


  238 000000B4 E59F9034        ldr              r9, =T0
  239 000000B8 E3A0A001        mov              r10, #TimerResetTimer0Interrupt
  240 000000BC E589A000        str              r10, [r9, #IR] ; remove MR0 int
                                                            errupt request from
                                                             timer
  241 000000C0         
  242 000000C0         ; here we stop the VIC from making the interrupt request
                        to the CPU:
  243 000000C0 E59F902C        ldr              r9, =VIC
  244 000000C4 E3A0A000        mov              r10, #0
  245 000000C8 E589A030        str              r10, [r9, #VectAddr] 
                                                            ; reset VIC
  246 000000CC E8FD8000        ldmfd            sp!, {pc}^
  247 000000D0         
  248 000000D0         
  249 000000D0         
  250 000000D0 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              E0004000 
              FFFFF000         AREA             memory, DATA, READWRITE
  251 00000000 00000000 
                       leds    dcd              0x00000000
  252 00000004 00020000        dcd              0x00020000
  253 00000008 00200000        dcd              0x00200000
  254 0000000C 00040000        dcd              0x00040000
  255 00000010 00220000        dcd              0x00220000
  256 00000014 00060000        dcd              0x00060000
  257 00000018 00240000        dcd              0x00240000
  258 0000001C 00260000        dcd              0x00260000
  259 00000020 00000000 
                       CurrentlyRunning
                               dcd              0x00000000
  260 00000024 40002048 
                       ColorsStack
                               dcd              0x40002048
  261 00000028 40001024 
                       SequenceStack
                               dcd              0x40001024
  262 0000002C 00000000 
                       timer   dcd              0x00000000
  263 00000030         
  264 00000030         
  265 00000030         
  266 00000030                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ColorsTop 000000BC

Symbol: ColorsTop
   Definitions
      At line 111 in file App.s
   Uses
      At line 92 in file App.s
Comment: ColorsTop used once
InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 1 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
SequenceTop 00000128

Symbol: SequenceTop
   Definitions
      At line 150 in file App.s
   Uses
      At line 99 in file App.s
Comment: SequenceTop used once
dloop 00000150

Symbol: dloop
   Definitions
      At line 167 in file App.s
   Uses
      At line 168 in file App.s
Comment: dloop used once
dowh1 000000F0

Symbol: dowh1
   Definitions
      At line 132 in file App.s
   Uses
      At line 144 in file App.s
Comment: dowh1 used once
endif4 0000011C

Symbol: endif4
   Definitions
      At line 143 in file App.s
   Uses
      At line 135 in file App.s
Comment: endif4 used once
floop 00000148

Symbol: floop
   Definitions
      At line 163 in file App.s
   Uses
      At line 173 in file App.s
Comment: floop used once
loop 000000B8

Symbol: loop



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 107 in file App.s
   Uses
      At line 107 in file App.s
Comment: loop used once
start 00000000

Symbol: start
   Definitions
      At line 4 in file App.s
   Uses
      At line 3 in file App.s
Comment: start used once
stop 0000016C

Symbol: stop
   Definitions
      At line 175 in file App.s
   Uses
      At line 175 in file App.s
Comment: stop used once
wh1 000000E0

Symbol: wh1
   Definitions
      At line 128 in file App.s
   Uses
      At line 145 in file App.s
Comment: wh1 used once
wloop 00000144

Symbol: wloop
   Definitions
      At line 162 in file App.s
   Uses
      At line 174 in file App.s
Comment: wloop used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 179 in file App.s
   Uses
      None
Comment: InterruptStuff unused
else00 00000090

Symbol: else00
   Definitions
      At line 224 in file App.s
   Uses
      At line 192 in file App.s
Comment: else00 used once
else11 0000005C

Symbol: else11
   Definitions
      At line 211 in file App.s
   Uses
      At line 198 in file App.s
Comment: else11 used once
endif00 000000B4

Symbol: endif00
   Definitions
      At line 233 in file App.s
   Uses
      At line 223 in file App.s
Comment: endif00 used once
endif11 00000088

Symbol: endif11
   Definitions
      At line 222 in file App.s
   Uses
      At line 210 in file App.s
Comment: endif11 used once
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 180 in file App.s
   Uses
      At line 52 in file App.s
Comment: irqhan used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ColorsStack 00000024

Symbol: ColorsStack
   Definitions
      At line 260 in file App.s
   Uses
      At line 94 in file App.s
      At line 199 in file App.s
      At line 215 in file App.s

CurrentlyRunning 00000020

Symbol: CurrentlyRunning
   Definitions
      At line 259 in file App.s
   Uses
      At line 195 in file App.s
      At line 224 in file App.s

SequenceStack 00000028

Symbol: SequenceStack
   Definitions
      At line 261 in file App.s
   Uses
      At line 101 in file App.s
      At line 203 in file App.s
      At line 211 in file App.s
      At line 227 in file App.s

leds 00000000

Symbol: leds
   Definitions
      At line 251 in file App.s
   Uses
      At line 128 in file App.s
Comment: leds used once
memory 00000000

Symbol: memory
   Definitions
      At line 250 in file App.s
   Uses
      None
Comment: memory unused
timer 0000002C

Symbol: timer
   Definitions
      At line 262 in file App.s
   Uses
      At line 125 in file App.s
      At line 132 in file App.s
      At line 187 in file App.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 115 in file App.s
   Uses
      At line 122 in file App.s
Comment: IO0CLR used once
IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 113 in file App.s
   Uses
      At line 117 in file App.s
Comment: IO0DIR used once
IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 114 in file App.s
   Uses
      At line 120 in file App.s
Comment: IO0SET used once
IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 9 in file App.s
   Uses
      At line 17 in file App.s
      At line 157 in file App.s

IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 7 in file App.s
   Uses
      At line 12 in file App.s
      At line 152 in file App.s

IO1PIN E0028010

Symbol: IO1PIN
   Definitions
      At line 10 in file App.s
   Uses
      None
Comment: IO1PIN unused
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 8 in file App.s
   Uses
      At line 15 in file App.s
      At line 155 in file App.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

IR 00000000

Symbol: IR
   Definitions
      At line 26 in file App.s
   Uses
      At line 71 in file App.s
      At line 240 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 46 in file App.s
   Uses
      At line 55 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 39 in file App.s
   Uses
      At line 59 in file App.s
Comment: IntEnable used once
MCR 00000014

Symbol: MCR
   Definitions
      At line 28 in file App.s
   Uses
      At line 77 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 29 in file App.s
   Uses
      At line 74 in file App.s
Comment: MR0 used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 20 in file App.s
   Uses
      At line 106 in file App.s
Comment: Mode_USR used once
T0 E0004000

Symbol: T0
   Definitions
      At line 24 in file App.s
   Uses
      At line 65 in file App.s
      At line 238 in file App.s

T1 E0008000



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: T1
   Definitions
      At line 25 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 27 in file App.s
   Uses
      At line 68 in file App.s
      At line 80 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 44 in file App.s
   Uses
      At line 45 in file App.s
      At line 55 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 45 in file App.s
   Uses
      At line 58 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002

Symbol: TimerCommandReset
   Definitions
      At line 31 in file App.s
   Uses
      At line 67 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 32 in file App.s
   Uses
      At line 79 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 33 in file App.s
   Uses
      At line 76 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Symbol: TimerResetAllInterrupts
   Definitions
      At line 35 in file App.s
   Uses
      At line 70 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 34 in file App.s
   Uses
      At line 239 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 38 in file App.s
   Uses
      At line 50 in file App.s
      At line 243 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 40 in file App.s
   Uses
      At line 62 in file App.s
      At line 245 in file App.s

VectAddr0 00000100

Symbol: VectAddr0
   Definitions
      At line 41 in file App.s
   Uses
      At line 53 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 42 in file App.s
   Uses
      At line 56 in file App.s
Comment: VectCtrl0 used once
27 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file App.s
   Uses
      None
Comment: main unused
1 symbol
389 symbols in table
